int speed=100;

/*the following function goes forward for the no. of ticks specified by that argument*/
void go_forward(int ticks)
{
  cmpc(LEFTMOTOR);
  while (gmpc(LEFTMOTOR)< ticks)
  {
  motor(LEFTMOTOR, speed);
  motor(RIGHTMOTOR, speed);
  }
  ao();
  printf("finished going forward\n");
}

/*the following function goes for the no. of ticks specified by that argument*/
void back_up(int ticks)
{
  cmpc(LEFTMOTOR);
  while (-gmpc(LEFTMOTOR)< ticks)
  {
  motor(LEFTMOTOR, -speed);
  motor(RIGHTMOTOR, -speed);
  }
  ao();
  printf("finished backup\n");
}
void turn_right()
{
    cmpc(LEFTMOTOR);
  	while (gmpc(LEFTMOTOR)< TICKSIN90)
  {
  	motor(LEFTMOTOR, speed);
  	motor(RIGHTMOTOR, -speed);
	}
    printf("turnedright\n");
  ao();
}
    
void turn_left()
{
    cmpc(RIGHTMOTOR);
  	while (gmpc(RIGHTMOTOR)< TICKSIN90)
  {
  	motor(LEFTMOTOR, -speed);
  	motor(RIGHTMOTOR, speed);
	}
    printf("turnedleft\n");
  ao();
}
void stayonleftedge(){
    if (analog(0) > 3000) 
    { // 1.1.1. Turn/arc left.
      motor(LEFTMOTOR, 80);
      motor(RIGHTMOTOR, 100); 
    }
    else  
    { // 1.2.1. Turn/arc right.
      motor(LEFTMOTOR, 100);
      motor(RIGHTMOTOR, 80);
    }}

void stayonrightedge(){
    if (analog(0) < 3000) 
    { // 1.1.1. Turn/arc left.
      motor(LEFTMOTOR, 85);
      motor(RIGHTMOTOR, 100); 
    }
    else  
    { // 1.2.1. Turn/arc right.
      motor(LEFTMOTOR, 100);
      motor(RIGHTMOTOR, 85);
    }}
    void find_black()
{
    while(analog(0)<3000){motor(RIGHTMOTOR,100); motor(LEFTMOTOR,100);}
    printf("found black\n");
    ao();
}

void find_white()
{
    while(analog(0)>3000){motor(RIGHTMOTOR,100); motor(LEFTMOTOR,100);}
    printf("found white\n");
    ao();
}
int main()
{
enable_servos();
printf("Hello World\n");
wait_for_light(3);
shut_down_in(119); 
get_people();
get_water_cylinder();
get_blue_poms();
get_middle_poms();
get_firefighters(); 
return 0; 
}
