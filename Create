//Basic Manuvers

void go_forward(int time) {
    create_drive_straight(-20);
    msleep(time);
    create_stop();
}

void back_up(int time){
    create_drive_straight(20);
    msleep(time);
    create_stop();
}
/*void drive_slowly(int time){
    create_drive_straight(-50);
    msleep(time);
    create_stop();
}*/

/*void turn_left(){
	set_create_total_angle(0);
    while (get_create_total_angle() < 90)
    {
    	create_drive_direct(-200,200);
	}
}
void turn_right(){
	set_create_total_angle(0);
    while (get_create_total_angle() > -90)
    {
    	create_drive_direct(200,-200);
	}        
}*/
void turn_small_left(){
    printf("Beginning turn_small_left.\n");
	set_create_total_angle(0);
    while (get_create_total_angle() < 25)
    {
    	create_drive_direct(20,20);
	}
}
void turn_small_right(){
    printf("Beginning turn_small_right.\n");
	set_create_total_angle(0);
    while (get_create_total_angle() > -2)
    {
        printf("Turning.\n");
    	create_drive_direct(15,-15);
        msleep(200);
	}        
}

//camera basics
#define RED 0
#define YELLOW 1
#define NOCOLOR 2

//returns value based on color seen
int get_color()


//subprocedures

#define ARM1UP
#define ARM2UP
#define BURNING 0
#define NONBURNING 1

void camera_scan1
//activate camera- how?
   printf("Camera activated.\n");
	int i;
	for(i=0;i<10;i++){
		msleep(50);
   		camera_update();
    	int red_count=0; msleep(50);
    	red_count=get_object_count(RED);
    	int yellow_count=0; msleep(50);
    	yellow_count=get_object_count(YELLOW);
    	printf("Num of objects (red and yellow) is %d,%d/n",red_count,yellow_count);
	if (get_object_count(YELLOW)>0&&get_object_count(RED)>0) return(BURNING) else return(NONBURNING);
	if(camera_scan()==BURNING){extinguish_fire} else{go_forward(200);}
}


void get_water(){}
void camera_scan1(){}
void extinguish_fire(){}

void get_MorB_1(){
set_servo_postion(1,2047);
set_servo_position(0,2047);
set_servo_position(2,200); //open claw all the way
set_servo_position(2,104); //close claw to hold it
back_up(800);
turn_right();
turn_right();
set_servo_position(2,200); //open claw
set_servo_position(2,0); //close claw all the way to original position
//close entire arm
set_servo_position(0,0);
set_servo_position(1,0);
back_up(800);
turn_left();
turn_left();
//now it's at where it started hopefully
}

void get_MorB_2(){}
void get_MorB_3(){}
void rescue_firefighters(){}
void camera_scan2(){}
void save_medicenter(){}
void leave(){}
void connect_electricity(){}

//Main Procedure
int main()
{
    printf("Hello World\n");
    create_connect();
    enable_servos();
    shut_down_in(2000);
    set_servo_position(1,0);
    set_servo_position(0,0);
    set_servo_position(2,0);
    get_water();
    camera_scan1();
    //finds burning building to determine which one to bring the water to
    extinguish_fire();
    get_MorB_1();
    //bring to disaster relief zone
    get_MorB_2();
    //bring to disaster relief zone
    get_MorB_3();
    //bring to disaster relief zone
    rescue_firefighters();
    camera_scan2();
    //determine which medicenter is burning
    save_medicenter();
    leave();
    //reposition and go to the other side of the board
    connect_electricity();
    create_disconnect();
    return 0;
}
